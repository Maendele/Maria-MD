const fs = require('fs');
const chalk = require('chalk');
require('dotenv').config();

//contact details
global.ownernumber = [ process.env.OWNER_NUMBER || "919931122319"],
global.ownername = process.env.OWNER_NAME || "üíôìÜ©‚Äé‚úòA è·¥úS ú‚úòìÜ™_‚ú∞",
global.ytname = "YT: AyushBotz.inc"
global.socialm = "GitHub: Ayushpandey023"
global.location = "Indian"

global.botname = process.env.BOTNAME || "ùêåùêÄùêëùêàùêÄ-ùêåùêÉ",//name of the bot

//sticker details
global.stickername = process.env.STICKER || "üíôìÜ©‚Äé‚úòA è·¥úS ú‚úòìÜ™_‚ú∞",
global.packname = 'Sticker By'
global.author = process.env.AUTHOR || "üíôìÜ©‚Äé‚úòA è·¥úS ú‚úòìÜ™_‚ú∞",
//console view/theme
global.themeemoji = 'üß©'
global.wm = "Ayush botz inc."

//theme link
global.link = 'https://whatsapp.com/channel/0029VaImo5ZG3R3qjKOdyr1I'

//custom prefix
global.prefa = process.env.PREFIX || ".",

//false=disable and true=enable
global.welcome = process.env.WELCOME || "false", //auto welcome
global.autoRecording = false //auto recording
global.autoTyping = false //auto typing
global.autorecordtype = false //auto typing + recording
global.autoread = false //auto read messages
global.autobio = false //auto update bio
global.anti212 = true //auto block +212
global.autoread_status = false //auto view status/story



//reply messages
global.mess = {
    done: 'üç≠ *Here you go, darling!* ',
    prem: 'üç≠ *My darling, this feature is reserved for premium users only*',
    admin: 'üç≠ *My darling, this feature is reserved for admins only*',
    botAdmin: 'üç≠ *Darling, this feature can only be used when the bot is a group admin* ',
    owner: 'üç≠ *My dearest, this feature is reserved for the owner only*',
    group: 'üç≠ *Sweetheart, this feature is exclusively for groups*',
    private: 'üç≠ *My love, this feature is exclusively for private chats*',
    wait: 'üç≠ *Darling, in process...* ',    
    error: 'üç≠ *Oh darling, there seems to be an error!*',
}

module.exports = {
ownernumber: global.ownernumber,
ownername: global.ownername,
sessionId: process.env.id,"
AUTO_BLOCK : process.env.PM_BLOCKER,
STATUS_SAVER : "true",
ANTI_BOT:"true",
}


global.thumb = fs.readFileSync('./Gallery/thumb.jpg')

let file = require.resolve(__filename)
fs.watchFile(file, () => {
    fs.unwatchFile(file)
    console.log(chalk.redBright(`Update'${__filename}'`))
    delete require.cache[file]
    require(file)
})
